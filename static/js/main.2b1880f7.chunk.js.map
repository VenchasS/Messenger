{"version":3,"sources":["Header.js","redux/auth-reducer.js","HeaderContainer.js","Navbar.js","components/Profile/ProfileHeader.js","components/Profile/ProfilePosts.js","components/Profile/ProfileAbout.js","components/Profile/NewPost.js","components/Profile/ProfileContainer.js","redux/reducerForProfile.js","components/Profile/Profile.js","components/Dialogs/DialogFriends.js","components/Dialogs/someMessages.js","hoc/authRedirect.js","components/Dialogs/Dialogs.js","components/News/News.js","components/Settings/Settings.js","components/Find/Search.js","components/Find/FindUsersresultateV2.js","components/Find/Morebutton.js","redux/reducerForSearchUser.js","components/Find/FindUsers.js","components/ProfileMe/ProfileHeader.js","components/ProfileMe/ProfilePosts.js","components/ProfileMe/NewPost.js","components/ProfileMe/ProfileAboutWithHook.js","components/ProfileMe/ProfileContainer.js","components/ProfileMe/Profile.js","components/login/login.js","Content.js","Body.js","loadingCircle.js","App.js","serviceWorker.js","redux/reducerForMessage.js","redux/redux-store.js","index.js"],"names":["LoginTrue","props","login","className","onClick","logout","Header","src","width","alt","auth","to","initialState","email","userId","loading","authReducer","state","action","type","data","makeAuth","dispatch","Axios","get","withCredentials","then","response","bool","resultCode","delete","HeaderContainer","componentDidMount","this","React","Component","connect","setUserData","Navbar","ProfileHeader","url","fullname","Post","Text","AllPosts","text","map","AboutMeProfileBlock","createRef","status","about","job","lookingForAJobDescription","ProfileContainer","setProfile","id","getStatus","componentWillUnmount","setUserProfile","profile","photos","small","fullName","ProfileAbout","lookingForAJob","aboutMe","ProfilePosts","Posts","class","Name","Surname","Url","CreateNewPost","PostMessage","NewPost","length","newstate","push","Reducer","blabla","withRouter","match","params","userid","ProfileContainerConnect","ForProfile","newPost","DialogFriend","Id","title","SomeMessage","from","Messages","messages","u1","obj","AuthRedirect","RedirectComponent","MessageRef","AuthControl","dispath","func","message","current","value","ForMessage","Friends","friend","name","surname","method","onSubmit","ref","placeholder","autoFocus","News","Settings","Search","TypicalFriend","Status","setFollow","image","city","Resultate","takeUsers","page","getUsersThunk","currentPage","pageSize","PageCount","Math","ceil","totalUsersCount","pages","i","pagesNavigation","setCurrentPage","count","users","user","follow","unfollow","followed","surName","MoreButton","innitialState","setLoading","reducerForSearchUser","total","FindUserContainer","ForUsersPage","setusers","newusers","setTotalUsersCount","setloading","a","b","headers","items","totalCount","post","newPostElement","AddPost","maxLength","ProfileStatusWithHook","useState","editMode","switchEditMode","editedStatus","setEditedStatus","onBlur","newStatus","setStatus","onChange","e","target","myid","add","compose","put","LoginForm","reduxForm","form","handleSubmit","Field","component","makeLogin","password","rememberMe","captcha","sendDataToAuth","Content","path","render","Body","Loading","App","Boolean","window","location","hostname","NewMessageBody","u2","u3","ReducerForMessage","idFriend","redusers","combineReducers","ProfileReducer","MessageReducer","formReducer","store","createStore","applyMiddleware","thunkMiddleWare","ReRender","ReactDOM","StrictMode","document","getElementById","getState","subscribe","navigator","serviceWorker","ready","registration","unregister","catch","error","console"],"mappings":"uXAIMA,EAAY,SAACC,GACf,OACI,oCACJ,6BACKA,EAAMC,OAEX,yBAAKC,UAAU,SAASC,QAASH,EAAMI,QAAvC,sCAkBWC,EAbA,SAACL,GACZ,OACA,yBAAKE,UAAU,UACP,yBAAKA,UAAU,QACX,yBAAKI,IAAI,mFAAmFC,MAAM,OAAOC,IAAI,OAEzG,IAAfR,EAAMS,KACP,kBAAC,EAAD,CAAWR,MAAOD,EAAMC,MAAOG,OAAQJ,EAAMI,SAC7C,kBAAC,IAAD,CAASF,UAAU,QAAQQ,GAAG,UAA9B,oC,+BCpBAC,EAAe,CACfC,MAAM,KACNC,OAAQ,KACRZ,MAAO,KACPQ,MAAM,EACNK,SAAS,GAuBEC,EAXK,WAAiC,IAAhCC,EAA+B,uDAAvBL,EAAcM,EAAS,uCAEhD,OAAQA,EAAOC,MACX,IAAK,gBAAiB,8CAAUF,GAAUC,EAAOE,MAA3B,IAAiCV,KAAKQ,EAAOR,OACnE,IAAK,cAAe,kCAAUO,GAAV,IAAiBF,QAAQG,EAAOH,UAEpD,QACI,OAAOE,IAMNI,EAAW,SAACC,GAEjBC,IAAMC,IAAI,uDAAuD,CAACC,iBAAiB,IAClFC,MAAK,SAAAC,GAzBK,IAACC,EAyBwC,IAA7BD,EAASP,KAAKS,YAAmBP,EAAS,CAAEH,KAAK,gBAAiBC,KAAKO,EAASP,KAAKA,KAAMV,MAAK,IACvHY,GA1BYM,GA0BQ,EAzBlB,SAACN,GACHA,EAAS,CACLH,KAAK,cAAeJ,QAAQa,WAuC3BvB,EAAS,SAACiB,GACnBC,IAAMO,OAAO,0DAA0D,CAACL,iBAAgB,IACvFC,MAAK,SAAAC,GAA+C,IAA7BA,EAASP,KAAKS,YAClCP,EAAU,CAAEH,KAAK,gBAAiBT,MAAK,QChDzCqB,E,4MAEFC,kBAAmB,a,uDAKV,OACL,kBAAC,EAAWC,KAAKhC,W,GARKiC,IAAMC,WAyBrBC,eAbO,SAACnB,GACnB,MAAM,CACFf,MAAOe,EAAMP,KAAKR,MAClBQ,KAAMO,EAAMP,KAAKA,SAGA,SAACY,GACtB,MAAM,CACFe,YAAY,SAACjB,GAAU,OAAOE,EAAS,CAACH,KAAK,gBAAiBC,UAC9DC,SAAU,kBAAIC,EAASD,IACvBhB,OAAQ,kBAAKiB,EAASjB,OAGf+B,CAA4CL,GCd5CO,EAhBD,WACV,OAEI,yBAAKnC,UAAU,UACf,kBAAC,IAAD,CAASQ,GAAG,MAAMR,UAAU,aAA5B,uEACA,kBAAC,IAAD,CAASQ,GAAG,QAAQR,UAAU,aAA9B,oDACA,kBAAC,IAAD,CAASQ,GAAG,WAAWR,UAAU,aAAjC,0DACA,kBAAC,IAAD,CAASQ,GAAG,WAAWR,UAAU,aAAjC,wCACA,kBAAC,IAAD,CAASQ,GAAG,UAAUR,UAAU,aAAhC,wCACA,kBAAC,IAAD,CAASQ,GAAG,YAAYR,UAAU,aAAlC,0DACA,kBAAC,IAAD,CAASQ,GAAG,YAAYR,UAAU,aAAlC,oCCCOoC,G,OAZO,SAACtC,GACnB,OACI,yBAAKE,UAAU,iBACTF,EAAMuC,IAAqG,yBAAK/B,IAAI,SAASN,UAAU,eAAeK,MAAM,OAAOD,IAAKN,EAAMuC,MAAlK,yBAAK/B,IAAI,SAASN,UAAU,eAAeK,MAAM,OAAOD,IAAI,mCAE1E,yBAAKJ,UAAU,YACVF,EAAMwC,aCGjBC,EAAO,SAACzC,GACV,OACQ,yBAAKE,UAAU,cACX,yBAAKI,IAAKN,EAAMuC,IAAOhC,MAAM,SAC7B,yBAAKL,UAAU,YAAYF,EAAM0C,QAKlCC,EAlBE,SAAC3C,GACd,OACQ,yBAAKE,UAAU,YACX,yFACCF,EAAM4C,KAAKC,KAAI,SAAAD,GAAI,OAAI,kBAAC,EAAD,CAAMF,KAAME,EAAKA,KAAML,IAAKvC,EAAMuC,WCO3DO,GCZMb,IAAMc,YDCC,SAAC/C,GAC1B,OACI,yBAAKE,UAAU,cACX,sEAAcF,EAAMgD,QACpB,uEAAehD,EAAMiD,OACrB,2FAAkC,IAAdjD,EAAMkD,IAAe,eAAK,qBAA9C,KACA,6EAAgBlD,EAAMmD,0BAAtB,QE0BIC,E,4MAzBXrB,kBAAoB,WAChB,EAAK/B,MAAMqD,WAAW,EAAKrD,MAAMsD,IACjC,EAAKtD,MAAMuD,UAAU,EAAKvD,MAAMsD,K,EAGpCE,qBAAuB,WACnB,EAAKxD,MAAMyD,kB,uDAKX,OAAKzB,KAAKhC,MAAMmB,KAAKuC,QAGjB,6BACI,kBAAC,EAAD,CAAenB,IAAKP,KAAKhC,MAAMmB,KAAKuC,QAAQC,OAAOC,MAAOpB,SAAUR,KAAKhC,MAAMmB,KAAKuC,QAAQG,WAC5F,kBAACC,EAAD,CAAgBd,OAAQhB,KAAKhC,MAAMgD,OAAQG,0BAA2BnB,KAAKhC,MAAMmB,KAAKuC,QAAQP,0BAA2BD,IAAKlB,KAAKhC,MAAMmB,KAAKuC,QAAQK,eAAgBd,MAAOjB,KAAKhC,MAAMmB,KAAKuC,QAAQM,UAErM,kBAACC,EAAD,CAAc1B,IAAKP,KAAKhC,MAAMmB,KAAKuC,QAAQC,OAAOC,MAAOhB,KAAMZ,KAAKhC,MAAMmB,KAAK+C,SAP/C,yBAAKC,MAAM,YAAW,8BAAW,8BAAW,8BAAW,mC,GAbxElC,IAAMC,W,gBCJjCvB,EAAe,CACfyD,KAAM,WACNC,QAAS,aACTH,MAAO,CAAC,CACJtB,KAAM,QACNU,GAAI,GACL,CACCV,KAAM,icACNU,GAAI,IAERgB,IAAK,oGACLZ,QAAS,KACTV,OAAO,MAYPuB,EAAgB,SAACC,EAAaxD,GAE1B,GAAoB,KAAhBwD,EACJ,OAAOxD,EAEX,IAAIyD,EAAU,CACV7B,KAAM4B,EACNlB,GAAItC,EAAMkD,MAAMlD,EAAMkD,MAAMQ,OAAS,GAAGpB,GAAK,GAE7CqB,EAAQ,eAAO3D,GAMnB,OALA2D,EAAST,MAAT,YAAqBlD,EAAMkD,OAE3BS,EAAST,MAAMU,KAAKH,GAGbE,GAoBIE,EAdC,WAAmC,IAAlC7D,EAAiC,uDAAzBL,EAAcM,EAAW,uCAE9C,OAAQA,EAAOC,MACX,IAAK,WAAY,IAAIyD,EAAWJ,EAActD,EAAO2B,KAAM5B,GACvD,OAAO2D,EACX,IAAK,iBAAkB,kCAAU3D,GAAV,IAAiB0C,QAASzC,EAAOyC,UACxD,IAAK,aAAc,OAAO,2BAAI1C,GAAX,IAAkBgC,OAAO/B,EAAO+B,SAEnD,QAAS,OAAOhC,IAQXqC,EAAa,SAACC,GACvB,OAAO,SAACjC,GACAiC,GACM,OAAPA,GACHhC,IAAMC,IAAN,+DAAkE+B,IACzD7B,MAAK,SAAAC,GACFL,EAAS,CAACH,KAAK,iBAAiBwC,QAAQhC,EAASP,YAMxDoC,EAAY,SAACD,GACtB,OAAO,SAACjC,GACJC,IAAMC,IAAN,sEAAyE+B,IAC5E7B,MAAK,SAAAC,GACFL,EAAS,CAACH,KAAK,aAAc8B,OAAOtB,EAASP,YChDjD2D,EAASC,aAxBG,SAAC/E,GAEb,OACI,kBAAC,EAAD,iBAAuBA,EAAvB,CAA+BsD,GAAItD,EAAMgF,MAAMC,OAAOC,aAwB/CC,EAFehD,aAlBlB,SAACnB,GAET,MAAM,CACFG,KAAMH,EAAMoE,WACZpC,OAAOhC,EAAMoE,WAAWpC,WAIV,SAAC3B,GACnB,MAAM,CACFgE,QAAS,SAACzC,GAAD,OAAWvB,EAAS,CAACH,KAAK,WAAW0B,KAAMA,KACpDa,eAAe,SAACC,GAAD,OAAarC,EAAS,CAACH,KAAK,iBAAiBwC,aAC5DL,WAAY,SAACC,GAAOjC,EAASgC,EAAWC,KACxCC,UAAW,SAAAD,GAAE,OAAEjC,EAASkC,EAAUD,QAKZnB,CAA+B2C,GCtB9CQ,EARM,SAACtF,GACd,OACI,kBAAC,IAAD,CAAUU,GAAI,YAAYV,EAAMuF,GAAIC,MAAOxF,EAAMoE,KAAM,IAAKpE,EAAMqE,QAASnE,UAAU,qBAChFF,EAAMoE,KAAO,IAAMpE,EAAMqE,QAAQ,GAAG,MCJ/CoB,G,OAAc,SAACzF,GACb,OACI,yBAAKE,UAAc,gBAAL,WAAwBF,EAAM0F,OACxC,yBAAKxF,UAAU,oBACf,yBAAKA,UAAU,iBAAiBF,EAAM4C,SAYvC+C,EAPE,SAAC3F,GAEd,OACIA,EAAM4F,SAASC,GAAGhD,KAAK,SAAAiD,GAAG,OAAK,kBAAC,EAAD,CAAaJ,KAAMI,EAAIJ,KAAM9C,KAAMkD,EAAIlD,WCc/DmD,EAvBQ,SAAC7D,GAEDC,YAAQ,GAARA,CAAYD,GAA/B,IAEM8D,EAJ0B,uKAMtB,OAAKhE,KAAKhC,MAAMS,KAEV,kBAACyB,EAAD,MAFwB,kBAAC,IAAD,CAAUxB,GAAG,eANrB,GAIAuB,IAAMC,WActC,OAAOC,aAPK,SAACnB,GACT,MAAM,CACFP,KAAKO,EAAMP,KAAKA,QAKjB0B,CAAe6D,ICftBC,EAAahE,IAAMc,YAuDRmD,IAJU/D,aAvBH,SAACnB,GACnB,MAAO,CACHG,KAAMH,EACNP,KAAKO,EAAMP,KAAKA,SAIC,SAACY,GACtB,MAAO,CACH8E,QAAS9E,EACT+E,KAAM,WACF/E,EAAS,CACLH,KAAM,eACJoC,GAAI,EACJ+C,QAASJ,EAAWK,QAAQC,QAElCN,EAAWK,QAAQC,MAAQ,GAC3BlF,EAAS,CAAEH,KAAM,iBAMJiB,EAjDT,SAACnC,GAIb,OACI,yBAAKE,UAAU,gBACX,yBAAKA,UAAU,oBAEVF,EAAMmB,KAAKqF,WAAWC,QAAQ5D,KAAI,SAAA6D,GAAM,OAAI,kBAAC,EAAD,CAAcxG,UAAU,oBAAoBqF,GAAImB,EAAOpD,GAAIc,KAAMsC,EAAOC,KAAMtC,QAASqC,EAAOE,cAE/I,yBAAK1G,UAAU,kBAEX,yBAAKA,UAAU,YAAf,IAA2B,kBAAC,EAAD,CAAU0F,SAAU5F,EAAMmB,KAAKqF,WAAWb,WAArE,KACA,yBAAKzF,UAAU,eACX,0BAAM2G,OAAO,OAAOC,SAAU,kBAAMb,EAAWK,QAAQC,MAAQ,IAC3D,8BAAUjD,GAAG,yBAAyByD,IAAKd,EAAYe,YAAY,8FAAmBC,WAAW,IAEjG,0BAAM9G,QAASH,EAAMoG,MAArB,kECjBTc,EARF,SAAClH,GACV,OACI,yBAAKE,UAAU,IAAf,SCMOiH,EARE,SAACnH,GACd,OACI,yBAAKE,UAAU,IAAf,aCOOkH,EATA,WACX,OACI,yBAAKlH,UAAU,wBACX,2BAAOA,UAAU,iBAAiB8G,YAAY,kEAC9C,oECANK,EAAgB,SAACrH,GACnB,IAAIsH,EAAS,SAACtE,GAAa,OAAe,IAAXA,EAA0B,+DAA6B,sEAEtF,OACI,yBAAK9C,UAAU,iBACVF,EAAMgD,OACP,yBAAK7C,QAAS,WAAQH,EAAMuH,WAAU,EAAMvH,EAAMsD,KAAOpD,UAAS,uBAA0BoH,EAAOtH,EAAMgD,SACzG,yBAAK7C,QAAS,WAAQH,EAAMuH,WAAU,EAAKvH,EAAMsD,KAAOpD,UAAS,yBAA4BoH,EAAOtH,EAAMgD,SAC3G,kBAAC,IAAD,CAAWtC,GAAI,YAAYV,EAAMsD,IAChC,yBAAK9C,IAAI,SAASD,MAAM,OAAOL,UAAU,SAASI,IAAKN,EAAMwH,SAE7D,yBAAKtH,UAAU,UACX,yBAAKA,UAAU,qBACX,yBAAKA,UAAU,sBAAf,cAAyCF,EAAM2G,KAA/C,YAAuD3G,EAAM4G,QAA7D,UACA,iCAAO5G,EAAMyH,KAAb,SAoDLC,E,4MApCXC,UAAY,SAACC,GACT,EAAK5H,MAAM2H,UAAUC,I,kEAJpB5F,KAAKhC,MAAM6H,cAAc7F,KAAKhC,MAAM8H,YAAY9F,KAAKhC,MAAM+H,Y,+BAU5D,IAHM,IAAD,OACDC,EAAYC,KAAKC,KAAKlG,KAAKhC,MAAMmI,gBAAkBnG,KAAKhC,MAAM+H,UAC9DK,EAAQ,GACHC,EAAI,EAAGA,GAAKL,EAAWK,IAC5BD,EAAMxD,KAAKyD,GAKf,IAFA,IAAIC,EAAkB,GAPjB,WASGD,GAA8D,GAAGA,EAAE,EAAG,iBAAUC,EAAgB1D,KAAM,0BAAMzE,QAAS,WAAQ,EAAKH,MAAMuI,eAAeF,GAAI,EAAKV,UAAUU,IAAOnI,UAAWmI,IAAM,EAAKrI,MAAM8H,YAAc,SAAW,MAAhI,IAA0IO,EAA1I,OAAtGA,EAAIrG,KAAKhC,MAAM8H,YAAY,EAAEO,EAAGrG,KAAKhC,MAAM8H,YAAY,EAAEO,IAAI,EAA7DA,GAGR,OACI,yBAAKnI,UAAU,sBACX,iCAAQoI,EAAgBzF,KAAI,SAAA2F,GAAU,OAAOA,KAA7C,MACyB,IAAvBxG,KAAKhC,MAAMc,QAAmB,yBAAKZ,UAAU,YAAW,8BAAW,8BAAW,8BAAW,+BAAoB,KAC9G8B,KAAKhC,MAAMyI,MAAM5F,KAAI,SAAC6F,GAEnB,OACI,kBAAC,EAAD,iBAAoB,EAAK1I,MAAzB,CAAgC2I,OAAQ,EAAK3I,MAAM2I,OAAQnB,MAA4B,MAArBkB,EAAK/E,OAAOC,MAAgB8E,EAAK/E,OAAOC,MAAO,iCAC7GgF,SAAU,EAAK5I,MAAM4I,SAAUtF,GAAIoF,EAAKpF,GAAIN,OAAQ0F,EAAKG,SAAUlC,KAAM+B,EAAK/B,KAAMC,QAAyB,MAAhB8B,EAAKI,QAAkB,GAAKJ,EAAKI,QAC9HrB,KAAM,gC,GA9BVxF,IAAMC,WCtBf6G,EAPI,WACf,OACI,yBAAK7I,UAAU,iBACX,4BAAQA,UAAU,cAAlB,oCCHR8I,G,OAAgB,CAChBP,MAAO,GACPV,SAAU,GACVI,gBAAiB,IACjBL,YAAa,EACbhH,SAAS,IAGPmI,EAAa,SAACtH,GAChB,MAAO,CAAET,KAAM,UAAWJ,QAASa,IA+BxBuH,EA5Bc,WAAoC,IAAnClI,EAAkC,uDAA1BgI,EAAe/H,EAAW,uCAC5D,OAAQA,EAAOC,MACX,IAAK,YAAa,OAAOF,EAEzB,IAAK,SAAU,OAAO,2BACfA,GADQ,IACDyH,MAAOzH,EAAMyH,MAAM5F,KAAI,SAAA6F,GAC7B,OAAIA,EAAKpF,KAAOrC,EAAOiE,OAAiB,2BAAKwD,GAAZ,IAAkBG,UAAU,IAC/CH,OAItB,IAAK,WAAY,OAAO,2BACjB1H,GADU,IACHyH,MAAOzH,EAAMyH,MAAM5F,KAAI,SAAA6F,GAC7B,GAAIA,EAAKpF,KAAOrC,EAAOiE,OAAQ,CAAE,IAAIP,EAAQ,eAAQ+D,GAAmC,OAA3B/D,EAASkE,UAAW,EAAclE,EACxF,OAAO+D,OAKtB,IAAK,YAAa,OAAO,2BAAK1H,GAAZ,IAAmByH,MAAM,YAAKxH,EAAOwH,SACvD,IAAK,eAAgB,OAAO,2BAAKzH,GAAZ,IAAmB8G,YAAa7G,EAAO6G,cAC5D,IAAK,qBAAsB,OAAO,2BAAK9G,GAAZ,IAAmBmH,gBAAiBlH,EAAOkI,QACtE,IAAK,UAAW,OAAO,2BAAKnI,GAAZ,IAAmBF,QAASG,EAAOH,UAEnD,QAAS,OAAOE,ICgBToI,GAFSjH,aA7BF,SAACnB,GAEnB,MAAM,CACFyH,MAAOzH,EAAMqI,aAAaZ,MAC1BV,SAAU/G,EAAMqI,aAAatB,SAC7BI,gBAAiBnH,EAAMqI,aAAalB,gBACpCL,YAAa9G,EAAMqI,aAAavB,YAChChH,QAASE,EAAMqI,aAAavI,YAIV,SAACO,GACtB,MAAM,CACFsH,OAAQ,SAACrF,GAAQjC,EAAS,CAACH,KAAK,SAAUgE,OAAO5B,KACjDsF,SAAU,SAACtF,GACPjC,EAAS,CAACH,KAAK,WAAYgE,OAAO5B,KAEtCgG,SAAS,SAACC,GACNlI,EAAS,CAACH,KAAK,YAAauH,MAAMc,KAEtChB,eAAe,SAACX,GAAUvG,EAAS,CAACH,KAAK,eAAe4G,YAAYF,KACpE4B,mBAAmB,SAACL,GAAW9H,EAAS,CAACH,KAAK,qBAAsBiI,MAAMA,KAC1EM,WAAW,SAAC9H,GAAUN,EAAS,CAACH,KAAK,UAAUJ,QAAQa,KACvDkG,cAAc,SAAC6B,EAAEC,GDFG,IAAC7B,EAAaC,ECEX1G,GDFFyG,ECEyB4B,EDFZ3B,ECEc4B,EDD9C,SAACtI,GACJC,IAAMC,IAAN,kEAAqEuG,EAArE,kBAA0FC,GAAY,CAClGvG,iBAAiB,EACjBoI,QAAS,CAAE,UAAW,0CAErBnI,MAAK,SAAAC,GACFL,EAAS,CAAEH,KAAM,YAAauH,MAAO/G,EAASP,KAAK0I,QACnDxI,EAAS,CAAEH,KAAM,qBAAsBiI,MAAOzH,EAASP,KAAK2I,aAC5DzI,EAAS4H,GAAW,WCN3BtB,UAAU,SAACC,GAAWvG,EDUP,SAACuG,GACxB,OAAO,SAACvG,GACLA,EAAS,CAACH,KAAK,YAAauH,MAAM,KAClCpH,EAAS4H,GAAW,IACpB3H,IAAMC,IAAN,kEAAqEqG,EAArE,aAAsF,CAClFpG,iBAAiB,EACjBoI,QAAQ,CAAC,UAAU,0CAEtBnI,MAAK,SAAAC,GAAcL,EAAS,CAACH,KAAK,YAAauH,MAAM/G,EAASP,KAAK0I,QACpExI,EAAS4H,GAAW,QCnBgBtB,CAAUC,KACzCL,UAAU,SAACmC,EAAEC,GDsBE,IAAMrG,ECtBFjC,GDsBEiC,ECtBmBqG,EAAFD,EDyBhC,SAACrI,GACJC,IAAMyI,KAAN,8DAAkEzG,GAAM,GACvE,CAAC9B,iBAAgB,EAAKoI,QAAQ,CAAC,UAAU,0CACzCnI,MAAK,SAAAC,GAA6C,IAA7BA,EAASP,KAAKS,YAAmBP,EAAU,CAACH,KAAK,SAAUgE,OAAO5B,QAKzF,SAACjC,GACJC,IAAMO,OAAN,8DAAoEyB,GACpE,CAAC9B,iBAAgB,EAAKoI,QAAQ,CAAC,UAAU,0CACxCnI,MAAM,SAAAC,GAA6C,IAA7BA,EAASP,KAAKS,YAAmBP,EAAS,CAACH,KAAK,WAAYgE,OAAO5B,cChC1EnB,EAzCP,SAACnC,GAEd,OACA,yBAAKE,UAAU,kBACX,kBAAC,EAAD,MACA,kBAAC,EAAuBF,GACxB,kBAAC,EAAD,UCHOsC,I,OAZO,SAACtC,GACnB,OACI,yBAAKE,UAAU,iBACTF,EAAMuC,IAAqG,yBAAK/B,IAAI,SAASN,UAAU,eAAeK,MAAM,OAAOD,IAAKN,EAAMuC,MAAlK,yBAAK/B,IAAI,SAASN,UAAU,eAAeK,MAAM,OAAOD,IAAI,mCAE1E,yBAAKJ,UAAU,YACVF,EAAMwC,aCGjBC,GAAO,SAACzC,GACV,OACQ,yBAAKE,UAAU,cACX,yBAAKI,IAAKN,EAAMuC,IAAOhC,MAAM,SAC7B,yBAAKL,UAAU,YAAYF,EAAM0C,QAKlCC,GAlBE,SAAC3C,GACd,OACQ,yBAAKE,UAAU,YACX,yFACCF,EAAM4C,KAAKC,KAAI,SAAAD,GAAI,OAAI,kBAAC,GAAD,CAAMF,KAAME,EAAKA,KAAML,IAAKvC,EAAMuC,WCLtEyH,GAAiB/H,IAAMc,YAeXkH,GAdC,SAACjK,GACb,OAAQ,yBAAKE,UAAU,WAEpB,8BAAUgK,UAAU,MAAMlD,YAAY,sEAAeD,IAAKiD,KAC1D,4BAAQ7J,QAAS,WAGbH,EAAMqF,QAAQ2E,GAAe1D,QAAQC,OACrCyD,GAAe1D,QAAQC,MAAQ,KAJnC,4D,SCgDF4D,GAAwB,SAACnK,GAAS,IAAD,EAEHoK,oBAAS,GAFN,oBAE9BC,EAF8B,KAErBC,EAFqB,OAIEF,mBAASpK,EAAMgD,QAJjB,oBAI9BuH,EAJ8B,KAIjBC,EAJiB,KAWnC,OAAe,IAAXH,EAA2B,yBAAKlK,QAAS,WAAKmK,GAAe,KAAlC,wCAAmDtK,EAAMgD,QAQpF,yBAAKyH,OAAQ,WAbC,IAACC,KAagBH,KAZdvK,EAAMgD,QACvBhD,EAAM2K,UAAUD,GAW8BJ,GAAe,IAAWpK,UAAU,uBAAlF,wCACO,2BAAQ+G,WAAW,EAAO2D,SAAU,SAACC,GAAML,EAAgBK,EAAEC,OAAOvE,QAAYA,MAAOgE,MAKvFzH,GA5Ea,SAAC9C,GAE1B,OACI,yBAAKE,UAAU,cACV,kBAAC,GAAD,CAAuByK,UAAW3K,EAAM2K,UAAW3H,OAAQhD,EAAMgD,SAClE,sEAAchD,EAAMiD,OACpB,2FAAkC,IAAdjD,EAAMkD,IAAe,eAAK,qBAA9C,KACA,6EAAgBlD,EAAMmD,0BAAtB,OCsBIC,G,qLApBQpB,KAAKhC,MAAMyD,mB,0CAETzB,KAAKhC,MAAMqD,WAAWrB,KAAKhC,MAAM+K,MAAO/I,KAAKhC,MAAMuD,UAAUvB,KAAKhC,MAAM+K,Q,+BAKzF,OAAI/I,KAAKhC,MAAMmB,KAAKuC,QAEhB,6BACJ,kBAAC,GAAD,CAAenB,IAAKP,KAAKhC,MAAMmB,KAAKuC,QAAQC,OAAOC,MAAQpB,SAAUR,KAAKhC,MAAMmB,KAAKuC,QAAQG,WAC7F,kBAAC,GAAD,CAAgB8G,UAAW3I,KAAKhC,MAAM2K,UAAW3H,OAAQhB,KAAKhC,MAAMgD,OAAQG,0BAA2BnB,KAAKhC,MAAMmB,KAAKuC,QAAQP,0BAA2BD,IAAKlB,KAAKhC,MAAMmB,KAAKuC,QAAQK,eAAgBd,MAAO,oCAC9M,kBAAC,GAAD,CAASoC,QAASrD,KAAKhC,MAAMqF,QAAS2F,IAAKhJ,KAAKhC,MAAMmB,KAAKoD,gBAC3D,kBAAC,GAAD,CAAchC,IAAKP,KAAKhC,MAAMmB,KAAKuC,QAAQC,OAAOC,MAAOhB,KAAMZ,KAAKhC,MAAMmB,KAAK+C,SAN1C,yBAAKhE,UAAU,YAAW,8BAAW,8BAAW,8BAAW,mC,GATzE+B,IAAMC,W,QC6BtB+I,gBACXlF,EACA5D,aAvBQ,SAACnB,GAET,MAAM,CACFG,KAAMH,EAAMoE,WACZ2F,KAAM/J,EAAMP,KAAK6C,GACjBN,OAAOhC,EAAMoE,WAAWpC,WAIV,SAAC3B,GACnB,MAAM,CACFgE,QAAS,SAACzC,GAAD,OAAWvB,EAAS,CAACH,KAAK,WAAW0B,KAAMA,KACpDa,eAAe,SAACC,GAAD,OAAarC,EAAS,CAACH,KAAK,iBAAiBwC,aAC5DL,WAAY,SAACC,GAAMjC,EAAUgC,EAAWC,KACxCC,UAAW,SAAAD,GAAE,OAAEjC,EAASkC,EAAUD,KAClCqH,UAAW,SAAA3H,GAAM,OAAI3B,ElBoDJ,SAAC2B,GAEtB,OAAO,SAAC3B,GACJC,IAAM4J,IAAN,8DAAwE,CAAC,OAASlI,GAAQ,CAACxB,iBAAgB,EAC3GoI,QAAQ,CAAC,UAAU,0CACtBnI,MAAK,SAAAC,GACFL,EAAS,CAACH,KAAK,aAAc8B,OAAOA,QkB1DN2H,CAAU3H,SAS5C+B,IAHWkG,EA5BC,SAACjL,GAEb,OACI,kBAAC,GAAqBA,M,oBCRxBmL,GAAYC,aAAU,CAACC,KAAK,SAAhBD,EACd,SAACpL,GACD,OAAQ,0BAAM8G,SAAU9G,EAAMsL,cACzB,6BACI,kBAACC,GAAA,EAAD,CAAOC,UAAW,QAAS7E,KAAK,QAAQK,YAAY,UADxD,IACmE,6BAC/D,kBAACuE,GAAA,EAAD,CAAOC,UAAU,QAAQ7E,KAAK,WAAWK,YAAY,aAFzD,IAEsE,6BAClE,kBAACuE,GAAA,EAAD,CAAOC,UAAU,QAAQ7E,KAAK,aAAazF,KAAK,aAHpD,oFAGgF,6BAC5E,uEAqCE+J,gBACX9I,aAdO,SAACnB,GACR,MAAM,CACFP,KAAKO,EAAMP,KAAKA,SAGX,SAACY,GACV,MAAM,CACFoK,UAAU,SAACtK,GAAD,OAASE,E3BJG,SAACF,GAC3B,OAAM,SAACE,GACHC,IAAMyI,KAAK,0DAA0D,CACjEnJ,MAAMO,EAAKlB,MACXyL,SAASvK,EAAKuK,SACdC,WAAWxK,EAAKwK,WAChBC,SAAQ,GACV,CAACpK,iBAAiB,IACnBC,MAAK,SAAAC,GACFL,EAASD,O2BLeyK,CAAe1K,SAMpC8J,EA5BD,SAACjL,GACX,GAAGA,EAAMS,KAAM,OAAM,kBAAC,IAAD,CAAUC,GAAG,QAMlC,OAAO,6BACH,0DACA,kBAACyK,GAAD,CAAWrE,SANE,SAAC3F,GAEdnB,EAAMyL,UAAUtK,UCIT2K,GArBA,SAAC9L,GAEZ,OAGI,yBAAKE,UAAU,WACf,kBAAC,IAAD,CAAO6L,KAAK,WAAWC,OAAQ,kBAAM,kBAAC,EAAD,SACrC,kBAAC,IAAD,CAAOD,KAAK,oBAAoBC,OAAQ,kBAAM,kBAAC,EAAD,SAC9C,kBAAC,IAAD,CAAOD,KAAK,MAAMC,OAAQ,kBAAM,kBAAC,GAAD,SAChC,kBAAC,IAAD,CAAOD,KAAK,QAAQP,UAAWtE,IAC/B,kBAAC,IAAD,CAAO6E,KAAK,YAAYP,UAAWrE,IACnC,kBAAC,IAAD,CAAO4E,KAAK,YAAYC,OAAQ,kBAAM,kBAAC,GAAD,SACtC,kBAAC,IAAD,CAAOD,KAAK,SAASC,OAAQ,kBAAM,kBAAC,GAAD,WCV5BC,GATH,SAACjM,GACT,OACI,yBAAKE,UAAU,QACX,kBAAC,EAAD,MACA,kBAAC,GAAD,QCFGgM,GAHD,WACV,OAAO,yBAAKhM,UAAU,YAAW,8BAAW,8BAAW,8BAAW,gCCMhEiM,G,kLAGEnK,KAAKhC,MAAMoB,a,+BAKX,OAAIY,KAAKhC,MAAMc,QAAkB,kBAAC,GAAD,MAGjC,kBAAC,IAAD,KACE,6BACE,kBAAC,EAAD,MACA,kBAAC,GAAD,Y,GAdMmB,IAAMC,WA+BTC,gBAVF,SAACnB,GACZ,MAAM,CACJF,QAAQE,EAAMP,KAAKK,YAGV,SAACO,GACZ,MAAM,CACJD,SAAS,kBAAIC,EAASD,OAGXe,CAAmBgK,IC5BdC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASvH,MACvB,2DCjBN,IAAIrE,GAAe,CACf8F,QAAS,CAAC,CACNE,KAAM,OACNC,QAAS,UACTtD,GAAI,KACL,CACCqD,KAAM,OACNC,QAAS,SACTtD,GAAI,KACL,CACCqD,KAAM,OACNC,QAAS,OACTtD,GAAI,KACL,CACCqD,KAAM,OACNC,QAAS,aACTtD,GAAI,KACL,CACCqD,KAAM,SACNC,QAAS,SACTtD,GAAI,MAERkJ,eAAgB,GAChB7G,SAAU,CACNE,GAAI,CAAC,CACDjD,KAAM,uCACN8C,KAAM,MACP,CACC9C,KAAM,uCACN8C,KAAM,sBAEV+G,GAAI,GACJC,GAAI,KAuBGC,GAnBY,WAAkC,IAAjC3L,EAAgC,uDAAxBL,GAAaM,EAAW,uCACvD,OAAQA,EAAOC,MACX,IAAK,eACL,IAAI0L,EAAc,IAAN,OAAY3L,EAAOqC,IAC3BqB,EAAQ,eAAO3D,GAOlB,OANF2D,EAASgB,SAAT,eAAwB3E,EAAK,UAC7B2D,EAASgB,SAASiH,GAAlB,YAAkC5L,EAAM2E,SAASiH,IAC/CjI,EAASgB,SAASiH,GAAUhI,KAAK,CAC7BhC,KAAM3B,EAAOoF,QACbX,KAAM,OAEHf,EAER,QAAS,OAAO3D,I,oBC1CrB6L,GAAWC,aAAgB,CAC3B1H,WAAY2H,EACZvG,WAAYwG,GACZ3D,aAAcH,EACdzI,OACA4K,KAAK4B,OAKLC,GAAQC,aAAYN,GAAUO,aAAgBC,OAElDhB,OAAOa,MAAQA,GAEAA,UCZXI,GAAW,SAACtM,GAEZuM,IAASvB,OACX,kBAAC,IAAMwB,WAAP,KACA,kBAAC,IAAD,CAAUN,MAAOA,IACf,kBAAC,GAAD,QAGFO,SAASC,eAAe,UAKXJ,aAEfA,GAASJ,GAAMS,YACfT,GAAMU,WAAU,WACZN,GAASJ,GAAMS,eHwGb,kBAAmBE,WACrBA,UAAUC,cAAcC,MACrBtM,MAAK,SAAAuM,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAM9H,c","file":"static/js/main.2b1880f7.chunk.js","sourcesContent":["import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n\r\nconst LoginTrue = (props)=>{ \r\n    return( \r\n        <>\r\n    <div>\r\n        {props.login}\r\n    </div> \r\n    <div className='logout' onClick={props.logout} > Выйти </div>\r\n    </>\r\n    )\r\n}\r\n\r\nconst Header = (props) => {\r\n    return(\r\n    <div className=\"header\" >\r\n            <div className=\"logo\">\r\n                <img src=\"http://clipart-library.com/images_k/letter-transparent/letter-transparent-18.png\" width='50px' alt=\"\"/>\r\n            </div>\r\n    {props.auth === true ? \r\n    <LoginTrue login={props.login} logout={props.logout} />:\r\n    <NavLink className='Login' to='/login'>Войти</NavLink> }\r\n    \r\n    </div>\r\n    );\r\n}\r\nexport default Header;\r\n","import Axios from \"axios\";\r\n\r\n\r\nlet initialState = {\r\n    email:null,\r\n    userId: null,\r\n    login: null,\r\n    auth: false,\r\n    loading: true\r\n};\r\n\r\nconst setLoading = (bool)=>{\r\n    return(dispatch)=>{\r\n        dispatch({\r\n            type:'SET_LOADING', loading:bool\r\n        })\r\n    }\r\n}\r\n\r\n\r\nconst authReducer = (state = initialState, action)=>{\r\n    \r\n    switch (action.type) {\r\n        case 'SET_USER_DATA': return{...state, ...action.data, auth:action.auth }\r\n        case 'SET_LOADING': return{...state, loading:action.loading} \r\n    \r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default authReducer;\r\n\r\nexport const makeAuth = (dispatch)=>{ \r\n        \r\n        Axios.get('https://social-network.samuraijs.com/api/1.0/auth/me',{withCredentials: true})\r\n        .then(response => { if(response.data.resultCode === 0){ dispatch({ type:'SET_USER_DATA', data:response.data.data, auth:true }); }\r\n        dispatch(setLoading(false));})\r\n    \r\n}\r\nexport const sendDataToAuth = (data)=>{\r\n    return(dispatch)=>{\r\n        Axios.post('https://social-network.samuraijs.com/api/1.0/auth/login',{\r\n            email:data.login,\r\n            password:data.password,\r\n            rememberMe:data.rememberMe,\r\n            captcha:true\r\n        },{withCredentials: true})\r\n        .then(response => {\r\n            dispatch(makeAuth)\r\n        })\r\n    }\r\n}\r\nexport const logout = (dispatch)=>{\r\n    Axios.delete('https://social-network.samuraijs.com/api/1.0/auth/login',{withCredentials:true})\r\n    .then(response => { if (response.data.resultCode === 0) {\r\n        dispatch( { type:'SET_USER_DATA', auth:false } );\r\n    } })\r\n}","\r\nimport React from 'react';\r\nimport Header from './Header';\r\n\r\nimport { connect } from 'react-redux';\r\nimport {makeAuth} from './redux/auth-reducer';\r\nimport {logout} from './redux/auth-reducer'\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n    componentDidMount= () => {\r\n        //this.props.makeAuth();\r\n        \r\n    }\r\n\r\n    render(){return(\r\n        <Header {...this.props} />\r\n       )}\r\n    \r\n}\r\nlet mapStateToProps = (state) => {\r\n    return{\r\n        login: state.auth.login,\r\n        auth: state.auth.auth\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        setUserData:(data)=> { return(dispatch({type:'SET_USER_DATA', data}))},\r\n        makeAuth: ()=>dispatch(makeAuth),\r\n        logout: ()=> dispatch(logout)\r\n    }\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(HeaderContainer)\r\n\r\n\r\n","import React from 'react';\r\nimport { NavLink} from 'react-router-dom';\r\n\r\nconst Navbar =() => {\r\n    return(\r\n        \r\n        <div className='Navbar'>\r\n        <NavLink to='/me' className='BtnNavBar'>Моя страница</NavLink>\r\n        <NavLink to='/news' className='BtnNavBar'>Новостни</NavLink>\r\n        <NavLink to='/dialogs' className='BtnNavBar'>Сообщения</NavLink>\r\n        <NavLink to='/friends' className='BtnNavBar'>Друзья</NavLink>\r\n        <NavLink to='/groups' className='BtnNavBar'>Группы</NavLink>\r\n        <NavLink to='/settings' className='BtnNavBar'>Настройки</NavLink>\r\n        <NavLink to='/finduser' className='BtnNavBar'>Поиск</NavLink>\r\n        </div>\r\n\r\n    )\r\n};\r\n\r\nexport default Navbar;\r\n","import React from 'react';\r\n\r\nconst ProfileHeader = (props) => {\r\n    return(\r\n        <div className='ProfileHeader'>\r\n            {!props.url ? <img alt='avatar' className=\"ProfilePhoto\" width=\"90px\" src='https://via.placeholder.com/50'/>:<img alt='avatar' className=\"ProfilePhoto\" width=\"90px\" src={props.url}/>}\r\n            \r\n            <div className=\"FullName\">\r\n                {props.fullname}\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default ProfileHeader;\r\n","import React from 'react';\r\n\r\nconst AllPosts = (props) => {\r\n    return(\r\n            <div className=\"AllPosts\">\r\n                <div>Все записи:</div>\r\n                {props.text.map(text => <Post Text={text.text} url={props.url} />  )}\r\n            </div>\r\n    )\r\n};\r\n\r\nconst Post = (props) => {\r\n    return(\r\n            <div className=\"SimplePost\">\r\n                <img src={props.url}   width=\"50px\"></img>\r\n                <div className=\"PostText\">{props.Text}</div>\r\n            </div>\r\n    )\r\n};\r\n\r\nexport default AllPosts;\r\n","import React from 'react';\r\n\r\nconst AboutMeProfileBlock = (props) => {\r\n   return(\r\n       <div className='aboutBlock'>\r\n           <div>Статус: {props.status}</div>\r\n           <div>Обо мне: {props.about}</div>\r\n           <div>Ищу работу:  { props.job === true ? 'Да':'Нет' } </div>\r\n           <div>О работе: {props.lookingForAJobDescription} </div>\r\n       </div>\r\n   )\r\n}\r\n\r\nexport default AboutMeProfileBlock;","import React from 'react';\r\nlet newPostElement = React.createRef();\r\n const AddPost = (props) => {\r\n     return  <div className='NewPost'>\r\n\r\n        <textarea maxLength=\"600\" placeholder='Новая запись' ref={newPostElement}></textarea>\r\n        <button onClick={() => {\r\n            //props.add(newPostElement.current.value);\r\n            props.newPost(newPostElement.current.value)\r\n            newPostElement.current.value = '';\r\n        }} >Отправить</button>\r\n     </div>\r\n\r\n };\r\n\r\n export default AddPost;\r\n","import ProfileHeader from './ProfileHeader.js';\r\nimport ProfilePosts from './ProfilePosts.js';\r\nimport NewPost from './NewPost.js'\r\nimport React from 'react';\r\nimport ProfileAboutMe from './ProfileAbout';\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount = () => {\r\n        this.props.setProfile(this.props.id);\r\n        this.props.getStatus(this.props.id);\r\n    }\r\n\r\n    componentWillUnmount = ()=>{\r\n        this.props.setUserProfile();\r\n    }\r\n    \r\n    render() {\r\n\r\n        if (!this.props.data.profile) { return (<div class=\"lds-ring\"><div></div><div></div><div></div><div></div></div>) }\r\n\r\n        return (\r\n            <div>\r\n                <ProfileHeader url={this.props.data.profile.photos.small} fullname={this.props.data.profile.fullName} />\r\n                <ProfileAboutMe status={this.props.status} lookingForAJobDescription={this.props.data.profile.lookingForAJobDescription} job={this.props.data.profile.lookingForAJob} about={this.props.data.profile.aboutMe} />\r\n                {/* <NewPost newPost={this.props.newPost} add={this.props.data.CreateNewPost} /> */}\r\n                <ProfilePosts url={this.props.data.profile.photos.small} text={this.props.data.Posts} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default ProfileContainer;","import Axios from \"axios\";\r\n\r\n\r\nlet initialState = {\r\n    Name: 'Veniamin',\r\n    Surname: 'Bezborodov',\r\n    Posts: [{\r\n        text: 'lorem',\r\n        id: 1\r\n    }, {\r\n        text: 'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.',\r\n        id: 2\r\n    }],\r\n    Url: 'https://avatars.mds.yandex.net/get-yapic/36777/ppTgGpfZGMQPJdgGHbcF4s99hC0-1572379071/islands-300',\r\n    profile: null,\r\n    status:null\r\n     //{\r\n    // \"aboutMe\": \"чисто чиил\",\r\n    // \"lookingForAJob\": true,\r\n    // \"lookingForAJobDescription\": \"я еще не готов\",\r\n    // \"fullName\": \"Veniamin Bezborodov\",\r\n    // \"photos\": {\r\n    //   \"small\": \"https://avatars.mds.yandex.net/get-yapic/36777/ppTgGpfZGMQPJdgGHbcF4s99hC0-1572379071/islands-300\",\r\n      \r\n    // }}\r\n}\r\n\r\nlet CreateNewPost = (PostMessage, state) =>\r\n    {\r\n        if (PostMessage === '') {\r\n        return state\r\n    }\r\n    let NewPost = {\r\n        text: PostMessage,\r\n        id: state.Posts[state.Posts.length - 1].id + 1\r\n    };\r\n    let newstate = {...state}\r\n    newstate.Posts = [...state.Posts]\r\n    \r\n    newstate.Posts.push(NewPost)\r\n    \r\n    \r\n    return newstate;\r\n    };\r\n\r\n\r\n\r\n\r\nconst Reducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case 'NEW-POST': let newstate = CreateNewPost(action.text, state);\r\n            return newstate;\r\n        case 'setUserProfile': return{...state, profile: action.profile}\r\n        case 'SET_STATUS': return {...state, status:action.status }\r\n       \r\n        default: return state;\r\n\r\n    };\r\n\r\n   \r\n};\r\nexport default Reducer;\r\n\r\nexport const setProfile = (id) => {\r\n    return (dispatch) => {         \r\n        if(!id){return;}\r\n        if(id === 'me'){return;}\r\n        Axios.get(`https://social-network.samuraijs.com/api/1.0/profile/${id}`)\r\n                .then(response => { \r\n                    dispatch({type:'setUserProfile',profile:response.data});                                \r\n                })\r\n    }\r\n    \r\n}\r\n\r\nexport const getStatus = (id)=>{\r\n    return (dispatch)=>{\r\n        Axios.get(`https://social-network.samuraijs.com/api/1.0/profile/status/${id}`)\r\n    .then(response => { \r\n        dispatch({type:'SET_STATUS', status:response.data});\r\n    })\r\n\r\n}  \r\n}\r\nexport const setStatus = (status)=>{\r\n   \r\n    return (dispatch)=>{\r\n        Axios.put(`https://social-network.samuraijs.com/api/1.0/profile/status`,{\"status\":status},{withCredentials:true,\r\n        headers:{'API-KEY':'871c5dc0-b5cf-47b8-b0e5-bbb084caa7ec'}  })\r\n    .then(response => {\r\n        dispatch({type:'SET_STATUS', status:status}); \r\n    })\r\n\r\n}}\r\n    \r\n  \r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport './Profile.css';\r\nimport { connect } from 'react-redux';\r\nimport ProfileContainer from './ProfileContainer';\r\nimport { withRouter } from 'react-router-dom';\r\nimport {setProfile} from './../../redux/reducerForProfile';\r\nimport {getStatus} from '../../redux/reducerForProfile';\r\n\r\nconst Profile = (props) => {  \r\n    \r\n    return(\r\n        <ProfileContainer  {...props}  id={props.match.params.userid}  />\r\n    )\r\n};\r\n\r\nlet Props = (state) => {\r\n    \r\n    return{\r\n        data: state.ForProfile,\r\n        status:state.ForProfile.status\r\n    }\r\n};\r\n\r\nlet dispatchToProps = (dispatch) => {\r\n    return{\r\n        newPost: (text) =>  dispatch({type:'NEW-POST',text: text}),\r\n        setUserProfile:(profile) => dispatch({type:'setUserProfile',profile}),\r\n        setProfile: (id)=>{ dispatch(setProfile(id))},\r\n        getStatus: id=>dispatch(getStatus(id)),\r\n    }\r\n};\r\n\r\nlet blabla = withRouter(Profile);\r\nlet ProfileContainerConnect = connect(Props,dispatchToProps)(blabla);\r\n\r\nexport default ProfileContainerConnect;\r\n","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nconst DialogFriend = (props) => {\r\n        return(\r\n            <NavLink  to={'/dialogs/'+props.Id} title={props.Name +' '+ props.Surname} className=\"SimleFriendDialog\" >\r\n                {props.Name + \" \" + props.Surname[0]+'.'}\r\n            </NavLink>\r\n        )\r\n};\r\n\r\nexport default DialogFriend;\r\n","import React from 'react';\r\n\r\nconst SomeMessage = (props) => {\r\n        return(\r\n            <div className={`${'SimpleMessage'} ${props.from}`}>\r\n                <div className=\"PhotoForMessage\"></div>\r\n                <div className=\"TextOfMessage\">{props.text}</div>\r\n            </div>\r\n        )\r\n};\r\n\r\nconst Messages = (props) => {\r\n\r\n    return(\r\n        props.messages.u1.map( obj => (<SomeMessage from={obj.from} text={obj.text} />)  )\r\n    )\r\n};\r\n\r\nexport default Messages;\r\n","\r\nimport React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\n const  AuthRedirect = (Component)=>{\r\n\r\n    let newComponent = connect({})(Component)\r\n\r\n    class RedirectComponent extends React.Component{\r\n        render(){ \r\n              if (!this.props.auth) { return<Redirect to='/login'/>}\r\n              \r\n             return <Component />\r\n        }       \r\n    }\r\n    let state = (state)=>{\r\n        return{\r\n            auth:state.auth.auth\r\n        }\r\n    }\r\n\r\n    \r\n    return connect(state)(RedirectComponent);\r\n}\r\n\r\n\r\n\r\nexport default AuthRedirect;\r\n\r\n","import React from 'react';\r\nimport DialogFriend from './DialogFriends.js';\r\nimport './Dialogs.css'\r\nimport { Redirect } from 'react-router-dom';\r\nimport Messages from './someMessages';\r\nimport { connect } from 'react-redux';\r\nimport AuthControl from '../../hoc/authRedirect';\r\n\r\nlet MessageRef = React.createRef();\r\n\r\nconst Dialogs = (props) => {\r\n    \r\n    \r\n\r\n    return (\r\n        <div className=\"DialogWindow\">\r\n            <div className=\"AllFriendsDialog\">\r\n\r\n                {props.data.ForMessage.Friends.map(friend => <DialogFriend className='SimleFriendDialog' Id={friend.id} Name={friend.name} Surname={friend.surname} />)}\r\n            </div>\r\n            <div className=\"DialogWithUser\">\r\n\r\n                <div className='Messages'> <Messages messages={props.data.ForMessage.Messages} /> </div>\r\n                <div className='SendMessage'>\r\n                    <form method='post' onSubmit={() => MessageRef.current.value = 0}>\r\n                        <textarea id=\"textareamessageFriends\" ref={MessageRef} placeholder='Ведите сообщение' autoFocus={true}>\r\n                        </textarea>\r\n                        <span onClick={props.func} >отправить</span>\r\n                    </form>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        data: state,\r\n        auth:state.auth.auth\r\n    }\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        dispath: dispatch,\r\n        func: () => {\r\n            dispatch({\r\n                type: 'SEND_MESSAGE'\r\n                , id: 1\r\n                , message: MessageRef.current.value\r\n            });\r\n            MessageRef.current.value = '';\r\n            dispatch({ type: 'RERENDER' })\r\n        }\r\n    }\r\n    \r\n};\r\n\r\nconst DialogsContainer = connect(mapStateToProps,mapDispatchToProps)(Dialogs);\r\n\r\n\r\n\r\nexport default AuthControl(DialogsContainer); \r\n","import React from 'react';\r\n\r\nconst News = (props) => {\r\n    return(\r\n        <div className=\"\">\r\n            News\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default News;\r\n","import React from 'react';\r\n\r\nconst Settings = (props) => {\r\n    return(\r\n        <div className=\"\">\r\n            Settings\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Settings;\r\n","import React from 'react';\r\n\r\nconst Search = () => {\r\n    return(\r\n        <div className=\"FindUsersInputWindow\"> \r\n            <input className=\"FindUsersInput\" placeholder=\"Введите имя\"/>\r\n            <button>Поиск</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Search;","import React from 'react';\r\n\r\n\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n\r\nconst TypicalFriend = (props) => {\r\n    let Status = (status) => { if (status === true) { return 'отписаться' } else { return 'подписаться' } };\r\n    \r\n    return (\r\n        <div className=\"TypicalFriend\" >\r\n            {props.status ? \r\n            <div onClick={() => { props.setFollow(false,props.id) }} className={`followButton redbgc`}>{Status(props.status)}</div> : \r\n            <div onClick={() => { props.setFollow(true,props.id) }} className={`followButton greenbgc`}>{Status(props.status)}</div>}\r\n           <NavLink   to={\"/profile/\"+props.id}>\r\n            <img alt=\"avatar\" width='50px' className=\"circle\" src={props.image}></img>\r\n            </NavLink>\r\n            <div className=\"blabla\" >\r\n                <div className=\"SearchFriendBlock\" >\r\n                    <div className=\"NameOfUserInSearch\"> {`${props.name} ${props.surname}.`} </div>\r\n                    <div> {props.city} </div>\r\n                </div>\r\n            </div>\r\n         \r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\nclass Resultate extends React.Component {\r\n    componentDidMount() {\r\n         this.props.getUsersThunk(this.props.currentPage,this.props.pageSize);      \r\n    }\r\n\r\n    takeUsers = (page) => { \r\n        this.props.takeUsers(page);      \r\n    }\r\n\r\n    render() {\r\n        let PageCount = Math.ceil(this.props.totalUsersCount / this.props.pageSize);\r\n        let pages = [];\r\n        for (let i = 1; i <= PageCount; i++) {\r\n            pages.push(i);\r\n        }\r\n\r\n        let pagesNavigation = [];\r\n        \r\n        for(let i = this.props.currentPage-3;i< this.props.currentPage+4;i++){if(i<1){continue} pagesNavigation.push( <span onClick={() => { this.props.setCurrentPage(i); this.takeUsers(i); }} className={i === this.props.currentPage ? \"active\" : null}  > {i} </span> ) }\r\n\r\n        \r\n        return (\r\n            <div className=\"FindUsersresultate\">\r\n                <div> { pagesNavigation.map(count => {return(count)}) } </div>\r\n                { this.props.loading === true ? <div className=\"lds-ring\"><div></div><div></div><div></div><div></div></div> : null }\r\n                {this.props.users.map((user) => {\r\n\r\n                    return (\r\n                        <TypicalFriend  {...this.props} follow={this.props.follow} image={user.photos.small != null ? user.photos.small: \"https://via.placeholder.com/50\"}\r\n                            unfollow={this.props.unfollow} id={user.id} status={user.followed} name={user.name} surname={user.surName == null ? '' : user.surName} \r\n                            city={\"user.location.city\"} />\r\n                    )\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\nexport default Resultate;","import React from 'react';\r\n\r\nconst MoreButton = () => {\r\n    return(\r\n        <div className=\"MoreButtonDiv\">\r\n            <button className=\"MoreButton\">Далее</button>\r\n        </div>\r\n    )\r\n}\r\nexport default MoreButton;","import Axios from \"axios\";\r\n\r\nlet innitialState = {\r\n    users: [],\r\n    pageSize: 10,\r\n    totalUsersCount: 100,\r\n    currentPage: 1,\r\n    loading: true\r\n}\r\n\r\nconst setLoading = (bool) => {\r\n    return { type: 'LOADING', loading: bool }\r\n}\r\n\r\nconst reducerForSearchUser = (state = innitialState, action) => {\r\n    switch (action.type) {\r\n        case 'SHOW_MORE': return state\r\n\r\n        case 'FOLLOW': return {\r\n            ...state, users: state.users.map(user => {\r\n                if (user.id === action.userid) { return { ...user, followed: true } }\r\n                else { return user }\r\n\r\n            })\r\n        }\r\n        case 'UNFOLLOW': return {\r\n            ...state, users: state.users.map(user => {\r\n                if (user.id === action.userid) { let newstate = { ...user }; newstate.followed = false; return newstate }\r\n                else { return user }\r\n\r\n            })\r\n        }\r\n\r\n        case 'SET_USERS': return { ...state, users: [...action.users] }\r\n        case 'CURRENT_PAGE': return { ...state, currentPage: action.currentPage }\r\n        case 'setTotalUsersCount': return { ...state, totalUsersCount: action.total }\r\n        case 'LOADING': return { ...state, loading: action.loading }\r\n\r\n        default: return state\r\n\r\n    }\r\n}\r\nexport default reducerForSearchUser;\r\n\r\nexport const getUsersThunk = (currentPage, pageSize) => {\r\n    return (dispatch) => {\r\n        Axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${currentPage}&count=${pageSize}`, {\r\n            withCredentials: true,\r\n            headers: { 'api-key': '871c5dc0-b5cf-47b8-b0e5-bbb084caa7ec' }\r\n        })\r\n            .then(response => {\r\n                dispatch({ type: 'SET_USERS', users: response.data.items });\r\n                dispatch({ type: 'setTotalUsersCount', total: response.data.totalCount });\r\n                dispatch(setLoading(false))\r\n            })\r\n    }\r\n}\r\nexport const takeUsers =(page)=>{\r\n return (dispatch) => { \r\n    dispatch({type:'SET_USERS', users:[]});  \r\n    dispatch(setLoading(true));\r\n    Axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${page}&count=10`, {\r\n        withCredentials: true,\r\n        headers:{'api-key':'871c5dc0-b5cf-47b8-b0e5-bbb084caa7ec'}\r\n    })\r\n    .then(response => { dispatch({type:'SET_USERS', users:response.data.items});    \r\n    dispatch(setLoading(false));\r\n         })\r\n}\r\n}\r\nexport const setFollow =(bool,id) => {\r\n\r\n    if (bool) {\r\n        return (dispatch)=>{\r\n            Axios.post(`https://social-network.samuraijs.com/api/1.0/follow/${id}`, {} \r\n            ,{withCredentials:true,headers:{'api-key':'871c5dc0-b5cf-47b8-b0e5-bbb084caa7ec'} })\r\n            .then(response => {if(response.data.resultCode === 0){ dispatch( {type:'FOLLOW', userid:id} ) }} )\r\n            \r\n        }\r\n    }\r\n\r\n    return (dispatch)=>{\r\n        Axios.delete(`https://social-network.samuraijs.com/api/1.0/follow/${id}` ,\r\n        {withCredentials:true,headers:{'api-key':'871c5dc0-b5cf-47b8-b0e5-bbb084caa7ec'} })\r\n        .then( response => {if(response.data.resultCode === 0){ dispatch({type:'UNFOLLOW', userid:id})}} )\r\n            \r\n    }\r\n}","import React from 'react';\r\nimport Search from './Search.js';\r\nimport FindUsersresultate from './FindUsersresultateV2.js';\r\nimport MoreButton from './Morebutton.js';\r\nimport './FindUsers.css';\r\nimport { connect } from 'react-redux';\r\nimport {getUsersThunk} from './../../redux/reducerForSearchUser';\r\nimport {takeUsers} from './../../redux/reducerForSearchUser';\r\nimport {setFollow} from './../../redux/reducerForSearchUser';\r\n\r\n\r\nconst FindUser = (props) => {\r\n    \r\n    return(\r\n    <div className=\"FindUserWindow\"> \r\n        <Search />\r\n        <FindUsersresultate {...props}  />\r\n        <MoreButton />\r\n    </div>\r\n    \r\n    )\r\n};\r\n\r\nlet mapStateToProps = (state) => {\r\n    \r\n    return{\r\n        users: state.ForUsersPage.users,\r\n        pageSize: state.ForUsersPage.pageSize,\r\n        totalUsersCount: state.ForUsersPage.totalUsersCount,\r\n        currentPage: state.ForUsersPage.currentPage,\r\n        loading: state.ForUsersPage.loading\r\n\r\n    }\r\n }\r\n let mapDispatchtoProps = (dispatch) => {\r\n     return{\r\n         follow: (id) => {dispatch({type:'FOLLOW', userid:id})},\r\n         unfollow: (id) => {\r\n             dispatch({type:'UNFOLLOW', userid:id})\r\n         },\r\n         setusers:(newusers) => {\r\n             dispatch({type:'SET_USERS', users:newusers})\r\n         },\r\n         setCurrentPage:(page) => {dispatch({type:'CURRENT_PAGE',currentPage:page})},\r\n         setTotalUsersCount:(total) => {dispatch({type:'setTotalUsersCount', total:total })},\r\n         setloading:(bool) => {dispatch({type:'LOADING',loading:bool})},\r\n         getUsersThunk:(a,b)=>{ dispatch(getUsersThunk(a,b)) },\r\n         takeUsers:(page) => { dispatch(takeUsers(page)) },\r\n         setFollow:(a,b)=>{ dispatch(setFollow(a,b)) }\r\n     }\r\n }\r\n\r\nlet FindUserContainer = connect(mapStateToProps,mapDispatchtoProps)(FindUser);\r\n \r\nexport default FindUserContainer;\r\n","import React from 'react';\r\n\r\nconst ProfileHeader = (props) => {\r\n    return(\r\n        <div className='ProfileHeader'>\r\n            {!props.url ? <img alt='avatar' className=\"ProfilePhoto\" width=\"90px\" src='https://via.placeholder.com/50'/>:<img alt='avatar' className=\"ProfilePhoto\" width=\"90px\" src={props.url}/>}\r\n            \r\n            <div className=\"FullName\">\r\n                {props.fullname}\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default ProfileHeader;\r\n","import React from 'react';\r\n\r\nconst AllPosts = (props) => {\r\n    return(\r\n            <div className=\"AllPosts\">\r\n                <div>Все записи:</div>\r\n                {props.text.map(text => <Post Text={text.text} url={props.url} />  )}\r\n            </div>\r\n    )\r\n};\r\n\r\nconst Post = (props) => {\r\n    return(\r\n            <div className=\"SimplePost\">\r\n                <img src={props.url}   width=\"50px\"></img>\r\n                <div className=\"PostText\">{props.Text}</div>\r\n            </div>\r\n    )\r\n};\r\n\r\nexport default AllPosts;\r\n","import React from 'react';\r\nlet newPostElement = React.createRef();\r\n const AddPost = (props) => {\r\n     return  <div className='NewPost'>\r\n\r\n        <textarea maxLength=\"600\" placeholder='Новая запись' ref={newPostElement}></textarea>\r\n        <button onClick={() => {\r\n\r\n            \r\n            props.newPost(newPostElement.current.value)\r\n            newPostElement.current.value = '';\r\n        }} >Отправить</button>\r\n     </div>\r\n\r\n };\r\n\r\n export default AddPost;\r\n","import React, { useState } from 'react';\r\n\r\n\r\nconst AboutMeProfileBlock = (props) => {\r\n    \r\n   return(\r\n       <div className='aboutBlock'>\r\n            <ProfileStatusWithHook setStatus={props.setStatus} status={props.status} />\r\n           <div>Обо мне:{props.about}</div> \r\n           <div>Ищу работу:  { props.job === true ? 'Да':'Нет' } </div>\r\n           <div>О работе: {props.lookingForAJobDescription} </div>\r\n       </div>\r\n   )\r\n}\r\n \r\n\r\n\r\n// class ProfileStatusEdited extends React.Component {\r\n\r\n//     SwitchEditMode = (bool)=>{\r\n//         this.setState({editMode:bool})\r\n//     }\r\n\r\n//     state={\r\n//         editMode:false,      \r\n//         editedStatus:this.props.status\r\n//     }\r\n\r\n//     editStatus=(newvalue)=>{       \r\n//         this.setState({'editedStatus':newvalue})  \r\n          \r\n//     }\r\n\r\n//     submitStatus= (newStatus)=>{\r\n//         if (newStatus===this.props.status) {return;}\r\n//         this.props.setStatus(newStatus)\r\n//     }\r\n\r\n//     render(){\r\n\r\n//     if (this.state.editMode===false) { return <div onClick={()=>{this.SwitchEditMode(true)}} >Статус:{this.props.status}</div>\r\n//         }\r\n\r\n//         let inputStatus = React.createRef();\r\n\r\n//         return(\r\n//            <div onBlur={()=>{this.submitStatus(this.state.editedStatus); this.SwitchEditMode(false)  }} className='ProfileStatusEdited' > \r\n//            Статус:<input  autoFocus={true} ref={inputStatus} onChange={()=>{ this.editStatus(inputStatus.current.value)  }}  value={this.state.editedStatus}  /> \r\n//            </div>\r\n           \r\n//         )\r\n//     }\r\n// }\r\n\r\nconst ProfileStatusWithHook = (props)=>{\r\n\r\n    let [editMode,switchEditMode] = useState(false);\r\n\r\n    let [editedStatus,setEditedStatus] = useState(props.status);\r\n\r\n    let submitStatus= (newStatus)=>{\r\n        if (newStatus=== props.status) {return;}\r\n        props.setStatus(newStatus)\r\n    }\r\n\r\n    if (editMode===false) { return <div onClick={()=>{switchEditMode(true)}} >Статус:{props.status}</div>\r\n        }\r\n\r\n        \r\n\r\n\r\n    return(\r\n\r\n        <div onBlur={()=>{submitStatus(editedStatus); switchEditMode(false)  }} className='ProfileStatusEdited' > \r\n        Статус:<input  autoFocus={true}  onChange={(e)=>{ setEditedStatus(e.target.value)  }}  value={editedStatus}  /> \r\n        </div>\r\n        \r\n    )\r\n}\r\nexport default AboutMeProfileBlock;\r\n","import ProfileHeader from './ProfileHeader.js';\r\nimport ProfilePosts from './ProfilePosts.js';\r\nimport NewPost from './NewPost.js'\r\nimport React from 'react';\r\n\r\nimport ProfileAboutMe from './ProfileAboutWithHook';\r\n\r\n\r\n\r\n\r\nclass ProfileContainer extends React.Component{\r\n    \r\ncomponentWillUnmount(){this.props.setUserProfile()}\r\n\r\n    componentDidMount(){ this.props.setProfile(this.props.myid); this.props.getStatus(this.props.myid) }\r\n    \r\n\r\n    render() {\r\n\r\n        if(!this.props.data.profile){return (<div className=\"lds-ring\"><div></div><div></div><div></div><div></div></div>)}\r\n        return(\r\n            <div>\r\n        <ProfileHeader url={this.props.data.profile.photos.small}  fullname={this.props.data.profile.fullName} />\r\n        <ProfileAboutMe setStatus={this.props.setStatus} status={this.props.status} lookingForAJobDescription={this.props.data.profile.lookingForAJobDescription} job={this.props.data.profile.lookingForAJob} about={'this.props.data.profile.aboutMe'}/>\r\n        <NewPost newPost={this.props.newPost} add={this.props.data.CreateNewPost}/>\r\n        <ProfilePosts url={this.props.data.profile.photos.small} text={this.props.data.Posts}/>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default ProfileContainer;","import React from 'react';\r\nimport './Profile.css';\r\nimport { connect } from 'react-redux';\r\nimport ProfileContainer from './ProfileContainer';\r\nimport { withRouter} from 'react-router-dom';\r\nimport {setProfile} from '../../redux/reducerForProfile';\r\nimport AuthRedirect from '../../hoc/authRedirect';\r\nimport { compose } from 'redux';\r\nimport {getStatus} from '../../redux/reducerForProfile';\r\nimport {setStatus} from '../../redux/reducerForProfile';\r\n\r\nconst Profile = (props) => {\r\n    \r\n    return(\r\n        <ProfileContainer {...props} />\r\n    )\r\n};\r\n\r\nlet Props = (state) => {\r\n    \r\n    return{\r\n        data: state.ForProfile,\r\n        myid: state.auth.id,\r\n        status:state.ForProfile.status\r\n    }\r\n};\r\n\r\nlet dispatchToProps = (dispatch) => {\r\n    return{\r\n        newPost: (text) =>  dispatch({type:'NEW-POST',text: text}),\r\n        setUserProfile:(profile) => dispatch({type:'setUserProfile',profile}),\r\n        setProfile: (id)=>{dispatch( setProfile(id)) },\r\n        getStatus: id=>dispatch(getStatus(id)),\r\n        setStatus: status => dispatch(setStatus(status)) \r\n    }\r\n};\r\n\r\n\r\n\r\nexport default compose(\r\n    AuthRedirect,\r\n    connect(Props,dispatchToProps),\r\n    withRouter\r\n    )\r\n    (Profile)\r\n\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { reduxForm, Field } from 'redux-form';\r\nimport { compose } from 'redux';\r\nimport {sendDataToAuth} from '../../redux/auth-reducer'\r\nconst LoginForm = reduxForm({form:'login'})(\r\n    (props)=>{\r\n    return( <form onSubmit={props.handleSubmit} >\r\n         <div>\r\n             <Field component={'input'} name='login' placeholder='login' /> <br/>\r\n             <Field component='input' name='password' placeholder='password'/> <br/>\r\n             <Field component='input' name='rememberMe' type='checkbox'/> запомнить меня <br/>\r\n             <button>Войти</button>\r\n         </div>\r\n     </form>\r\n    )\r\n})\r\n\r\n\r\n\r\n\r\nconst Login = (props)=>{\r\n    if(props.auth){return<Redirect to='/me'/>}\r\n\r\n    const onSubmit = (data)=>{\r\n        \r\n        props.makeLogin(data)\r\n    }\r\n    return(<div>     \r\n        <div>Вход:</div>\r\n        <LoginForm onSubmit={onSubmit} />\r\n    </div>\r\n\r\n    )\r\n}\r\n\r\nconst mstp=(state)=>{\r\n    return{\r\n        auth:state.auth.auth\r\n    }\r\n}\r\nconst mdtp = (dispatch)=>{\r\n    return{\r\n        makeLogin:(data)=> dispatch(sendDataToAuth(data))\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default compose(\r\n    connect(mstp,mdtp)\r\n)\r\n(Login)","import React from 'react';\r\nimport Profile from './components/Profile/Profile.js';\r\nimport Dialogs from './components/Dialogs/Dialogs.js'\r\nimport News from './components/News/News.js'\r\nimport Settings from './components/Settings/Settings.js'\r\nimport { Route,} from \"react-router-dom\";\r\nimport FindUser from './components/Find/FindUsers.js';\r\nimport ProfileMe from './components/ProfileMe/Profile.js';\r\nimport Login from './components/login/login';\r\n\r\nconst Content =(props) => {\r\n\r\n    return(\r\n        \r\n         \r\n        <div className='Content'>\r\n        <Route path=\"/dialogs\" render={() => <Dialogs />} />\r\n        <Route path=\"/profile/:userid?\" render={() => <Profile />} />\r\n        <Route path=\"/me\" render={() => <ProfileMe />} />\r\n        <Route path=\"/news\" component={News} />\r\n        <Route path=\"/settings\" component={Settings} />\r\n        <Route path=\"/finduser\" render={() => <FindUser />} />\r\n        <Route path=\"/login\" render={() => <Login />} />\r\n        {/* <Route path=\"/finduserv2\" render={() => <FindUser />} /> */}\r\n        </div> \r\n        \r\n        \r\n\r\n    )\r\n};\r\n\r\nexport default Content;\r\n","import React from 'react';\r\nimport Navbar from './Navbar.js';\r\nimport Content from './Content.js';\r\nconst Body =(props) => {\r\n    return(\r\n        <div className='Body'>\r\n            <Navbar />\r\n            <Content />\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Body;\r\n","import React from 'react';\r\n\r\nlet Loading = ()=> {\r\n    return <div className=\"lds-ring\"><div></div><div></div><div></div><div></div></div>\r\n}\r\nexport default Loading;","import React from 'react';\nimport './App.css';\nimport Header from './HeaderContainer';\nimport Body from './Body.js';\nimport {BrowserRouter, HashRouter} from \"react-router-dom\";\nimport { connect } from 'react-redux';\nimport Loading from './loadingCircle';\nimport {makeAuth} from './redux/auth-reducer';\n\nclass App extends React.Component {\n\n      componentDidMount(){\n        this.props.makeAuth()\n      }\n\n      render(){\n\n        if (this.props.loading) { return <Loading /> }\n\n      return (\n        <HashRouter>\n          <div >\n            <Header />\n            <Body />\n          </div>\n        </HashRouter>\n      )\n}\n\n}\nconst mstp = (state)=>{\n  return{\n    loading:state.auth.loading\n  }\n}\nconst mdtp = (dispatch)=>{\n  return{\n    makeAuth:()=>dispatch(makeAuth)\n  }\n}\nexport default connect(mstp,mdtp)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","\r\nlet initialState = {\r\n    Friends: [{\r\n        name: 'Petr',\r\n        surname: 'Velikiy',\r\n        id: '1'\r\n    }, {\r\n        name: 'Ivan',\r\n        surname: 'Rubsov',\r\n        id: '2'\r\n    }, {\r\n        name: 'Alex',\r\n        surname: 'Grey',\r\n        id: '3'\r\n    }, {\r\n        name: 'Oleg',\r\n        surname: 'Maximilian',\r\n        id: '4'\r\n    }, {\r\n        name: 'Nikita',\r\n        surname: 'Gomnov',\r\n        id: '5'\r\n    }],\r\n    NewMessageBody: '',\r\n    Messages: {\r\n        u1: [{\r\n            text: 'привет',\r\n            from: 'me'\r\n        }, {\r\n            text: 'привет',\r\n            from: 'MessageFromFriend'\r\n        }],\r\n        u2: [],\r\n        u3: []\r\n    }\r\n}\r\n\r\n const ReducerForMessage = (state = initialState,action) => {\r\n     switch (action.type) {\r\n         case 'SEND_MESSAGE':\r\n         let idFriend = `${'u'}${action.id}`;\r\n         let newstate = {...state};\r\n        newstate.Messages = {...state['Messages']};\r\n        newstate.Messages[idFriend] = [...state.Messages[idFriend]];\r\n          newstate.Messages[idFriend].push({\r\n              text: action.message,\r\n              from: 'me'\r\n          })\r\n          return newstate;\r\n             \r\n         default: return state;\r\n\r\n     }\r\n\r\n }\r\n\r\nexport default ReducerForMessage;\r\n","import {createStore, combineReducers, applyMiddleware} from 'redux';\r\nimport ProfileReducer from './reducerForProfile';\r\nimport MessageReducer from './reducerForMessage';\r\nimport reducerForSearchUser from './reducerForSearchUser';\r\nimport auth from './auth-reducer';\r\nimport thunkMiddleWare from 'redux-thunk';\r\nimport {reducer as formReducer} from 'redux-form';\r\n\r\nlet redusers = combineReducers({\r\n    ForProfile: ProfileReducer,\r\n    ForMessage: MessageReducer,\r\n    ForUsersPage: reducerForSearchUser,\r\n    auth,\r\n    form:formReducer\r\n\r\n\r\n})\r\n\r\nlet store = createStore(redusers, applyMiddleware(thunkMiddleWare));\r\n\r\nwindow.store = store;\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store from './redux/redux-store';\nimport { Provider } from 'react-redux';\n\n\n\nlet ReRender = (state) => {\n\n    ReactDOM.render(\n  <React.StrictMode>\n  <Provider store={store}>\n    <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)};\n\n\n\nexport default ReRender;\n\nReRender(store.getState());\nstore.subscribe(() => {\n    ReRender(store.getState());\n});\n\nserviceWorker.unregister();\n"],"sourceRoot":""}